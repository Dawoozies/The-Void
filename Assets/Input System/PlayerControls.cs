//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Input System/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""PlayerDefault"",
            ""id"": ""ec1b28e5-e4e9-411b-aeae-d054f06b5f7e"",
            ""actions"": [
                {
                    ""name"": ""LeftStick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""584c4412-1026-4329-9741-5c1e312686d1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LightAttack"",
                    ""type"": ""Button"",
                    ""id"": ""1d459f18-4105-407e-b323-919166799849"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightBumper"",
                    ""type"": ""PassThrough"",
                    ""id"": ""41b6db95-5a3a-4d03-b5cc-0e2f4b7a09d0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftBumper"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c553e135-00f2-4db8-ae3d-e70851b7eba2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a2c5040b-7f27-4287-8c73-9f79d521f2bc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dodge"",
                    ""type"": ""Button"",
                    ""id"": ""3409345f-9500-4cf6-b9ab-8d35efa975bb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""JumpRelease"",
                    ""type"": ""Button"",
                    ""id"": ""a6879ed6-d62d-4618-b67b-7310fe0afe01"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightStick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7171db59-ba57-4ba6-a0c9-7507190c8381"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftTrigger"",
                    ""type"": ""PassThrough"",
                    ""id"": ""43c67d65-5ca5-45e1-b51a-1810011cf1ff"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightTrigger"",
                    ""type"": ""PassThrough"",
                    ""id"": ""71c62d2b-a58a-46a4-a7c9-317982e88c94"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Left Stick"",
                    ""id"": ""b61c6d55-6e05-4017-a9de-1994802e0730"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftStick"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9f65c0a9-7952-4581-b9b6-3b732df75ce7"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8e554f6e-e7f1-4991-acbb-afe60ab680bc"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""196f0495-4cb7-4991-aa42-3840119c375e"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0bf7a4cf-3192-428b-949a-283d68fd3705"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c6d64f70-e643-4916-813c-8aa05c6e0b2e"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LightAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d403ff1c-ba27-4ae6-aaef-4b6db739f773"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""058aecf9-fb74-4e34-af71-0e66cb6e0c31"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""39aff7e8-7ec5-4805-b8b7-6a130006b65c"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JumpRelease"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Right Stick"",
                    ""id"": ""7279188c-57b9-4b68-8ced-1c6ac2aa6cfe"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightStick"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""36838860-c463-4d73-8243-1dbe81794930"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5c1c7d1d-7ec9-4c0e-9754-fd13ec023822"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ba61cc2b-b711-4806-86f7-3404a8f6b5e2"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b064e157-b6eb-4a7f-a103-e7eeb1f1cd47"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""dc259310-605d-4e49-a3ff-06f01310e5a9"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftTrigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be29de87-6ede-41b1-999d-b1d63788fa26"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightTrigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""788e3b59-b90f-4841-9807-aa4ccb771809"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightBumper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cb27c61a-55f4-49da-a67f-82bdb046e46e"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftBumper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerDefault
        m_PlayerDefault = asset.FindActionMap("PlayerDefault", throwIfNotFound: true);
        m_PlayerDefault_LeftStick = m_PlayerDefault.FindAction("LeftStick", throwIfNotFound: true);
        m_PlayerDefault_LightAttack = m_PlayerDefault.FindAction("LightAttack", throwIfNotFound: true);
        m_PlayerDefault_RightBumper = m_PlayerDefault.FindAction("RightBumper", throwIfNotFound: true);
        m_PlayerDefault_LeftBumper = m_PlayerDefault.FindAction("LeftBumper", throwIfNotFound: true);
        m_PlayerDefault_Jump = m_PlayerDefault.FindAction("Jump", throwIfNotFound: true);
        m_PlayerDefault_Dodge = m_PlayerDefault.FindAction("Dodge", throwIfNotFound: true);
        m_PlayerDefault_JumpRelease = m_PlayerDefault.FindAction("JumpRelease", throwIfNotFound: true);
        m_PlayerDefault_RightStick = m_PlayerDefault.FindAction("RightStick", throwIfNotFound: true);
        m_PlayerDefault_LeftTrigger = m_PlayerDefault.FindAction("LeftTrigger", throwIfNotFound: true);
        m_PlayerDefault_RightTrigger = m_PlayerDefault.FindAction("RightTrigger", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerDefault
    private readonly InputActionMap m_PlayerDefault;
    private IPlayerDefaultActions m_PlayerDefaultActionsCallbackInterface;
    private readonly InputAction m_PlayerDefault_LeftStick;
    private readonly InputAction m_PlayerDefault_LightAttack;
    private readonly InputAction m_PlayerDefault_RightBumper;
    private readonly InputAction m_PlayerDefault_LeftBumper;
    private readonly InputAction m_PlayerDefault_Jump;
    private readonly InputAction m_PlayerDefault_Dodge;
    private readonly InputAction m_PlayerDefault_JumpRelease;
    private readonly InputAction m_PlayerDefault_RightStick;
    private readonly InputAction m_PlayerDefault_LeftTrigger;
    private readonly InputAction m_PlayerDefault_RightTrigger;
    public struct PlayerDefaultActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerDefaultActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftStick => m_Wrapper.m_PlayerDefault_LeftStick;
        public InputAction @LightAttack => m_Wrapper.m_PlayerDefault_LightAttack;
        public InputAction @RightBumper => m_Wrapper.m_PlayerDefault_RightBumper;
        public InputAction @LeftBumper => m_Wrapper.m_PlayerDefault_LeftBumper;
        public InputAction @Jump => m_Wrapper.m_PlayerDefault_Jump;
        public InputAction @Dodge => m_Wrapper.m_PlayerDefault_Dodge;
        public InputAction @JumpRelease => m_Wrapper.m_PlayerDefault_JumpRelease;
        public InputAction @RightStick => m_Wrapper.m_PlayerDefault_RightStick;
        public InputAction @LeftTrigger => m_Wrapper.m_PlayerDefault_LeftTrigger;
        public InputAction @RightTrigger => m_Wrapper.m_PlayerDefault_RightTrigger;
        public InputActionMap Get() { return m_Wrapper.m_PlayerDefault; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerDefaultActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerDefaultActions instance)
        {
            if (m_Wrapper.m_PlayerDefaultActionsCallbackInterface != null)
            {
                @LeftStick.started -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnLeftStick;
                @LeftStick.performed -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnLeftStick;
                @LeftStick.canceled -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnLeftStick;
                @LightAttack.started -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnLightAttack;
                @LightAttack.performed -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnLightAttack;
                @LightAttack.canceled -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnLightAttack;
                @RightBumper.started -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnRightBumper;
                @RightBumper.performed -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnRightBumper;
                @RightBumper.canceled -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnRightBumper;
                @LeftBumper.started -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnLeftBumper;
                @LeftBumper.performed -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnLeftBumper;
                @LeftBumper.canceled -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnLeftBumper;
                @Jump.started -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnJump;
                @Dodge.started -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnDodge;
                @Dodge.performed -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnDodge;
                @Dodge.canceled -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnDodge;
                @JumpRelease.started -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnJumpRelease;
                @JumpRelease.performed -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnJumpRelease;
                @JumpRelease.canceled -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnJumpRelease;
                @RightStick.started -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnRightStick;
                @RightStick.performed -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnRightStick;
                @RightStick.canceled -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnRightStick;
                @LeftTrigger.started -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnLeftTrigger;
                @LeftTrigger.performed -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnLeftTrigger;
                @LeftTrigger.canceled -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnLeftTrigger;
                @RightTrigger.started -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnRightTrigger;
                @RightTrigger.performed -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnRightTrigger;
                @RightTrigger.canceled -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnRightTrigger;
            }
            m_Wrapper.m_PlayerDefaultActionsCallbackInterface = instance;
            if (instance != null)
            {
                @LeftStick.started += instance.OnLeftStick;
                @LeftStick.performed += instance.OnLeftStick;
                @LeftStick.canceled += instance.OnLeftStick;
                @LightAttack.started += instance.OnLightAttack;
                @LightAttack.performed += instance.OnLightAttack;
                @LightAttack.canceled += instance.OnLightAttack;
                @RightBumper.started += instance.OnRightBumper;
                @RightBumper.performed += instance.OnRightBumper;
                @RightBumper.canceled += instance.OnRightBumper;
                @LeftBumper.started += instance.OnLeftBumper;
                @LeftBumper.performed += instance.OnLeftBumper;
                @LeftBumper.canceled += instance.OnLeftBumper;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Dodge.started += instance.OnDodge;
                @Dodge.performed += instance.OnDodge;
                @Dodge.canceled += instance.OnDodge;
                @JumpRelease.started += instance.OnJumpRelease;
                @JumpRelease.performed += instance.OnJumpRelease;
                @JumpRelease.canceled += instance.OnJumpRelease;
                @RightStick.started += instance.OnRightStick;
                @RightStick.performed += instance.OnRightStick;
                @RightStick.canceled += instance.OnRightStick;
                @LeftTrigger.started += instance.OnLeftTrigger;
                @LeftTrigger.performed += instance.OnLeftTrigger;
                @LeftTrigger.canceled += instance.OnLeftTrigger;
                @RightTrigger.started += instance.OnRightTrigger;
                @RightTrigger.performed += instance.OnRightTrigger;
                @RightTrigger.canceled += instance.OnRightTrigger;
            }
        }
    }
    public PlayerDefaultActions @PlayerDefault => new PlayerDefaultActions(this);
    public interface IPlayerDefaultActions
    {
        void OnLeftStick(InputAction.CallbackContext context);
        void OnLightAttack(InputAction.CallbackContext context);
        void OnRightBumper(InputAction.CallbackContext context);
        void OnLeftBumper(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnDodge(InputAction.CallbackContext context);
        void OnJumpRelease(InputAction.CallbackContext context);
        void OnRightStick(InputAction.CallbackContext context);
        void OnLeftTrigger(InputAction.CallbackContext context);
        void OnRightTrigger(InputAction.CallbackContext context);
    }
}
